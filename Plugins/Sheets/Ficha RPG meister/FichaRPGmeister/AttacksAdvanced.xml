<?xml version="1.0" encoding="UTF-8"?>
<form name="AttacksAdvanced" align="client">
    <rectangle g="col" g-width="2" g-min-height="110" g-vert-tile="true" color="black" strokeColor="white" strokeSize="1" padding="{left=5,right=5,top=5,bottom=5}" >
		<button text="Novo Ataque" g="col" g-width="12" g-min-height="25" margins="{bottom=5}">
			<event name="onClick">
				self.rclListaDosAtaques:append()
			</event>
		</button>

		<scrollBox g="col" g-width="12" g-vert-tile="true">
			<gridRecordList name="rclListaDosAtaques" field="campoDosAtaques" templateForm="AdvancedAttacksSelect" g="col" g-width="12" selectable="true" minQt="1">
				<event name="onSelect">
					local node = self.rclListaDosAtaques.selectedNode
					self.boxDetalhesDoAtaque.node = node
					self.boxDetalhesDoAtaque.visible = (node ~= nil)


					local theme = sheet.theme
					if theme == "Claro" then
						theme = "light"
					else
						theme = "dark"
					end
					local color = sheet.colorBackground or "#000000"
					local strokeColor = sheet.colorStroke or "#FFFFFF"
					local fontColor = sheet.colorFont or "#FFFFFF"

					local controls = findAllControls(self.boxDetalhesDoAtaque)
	
					local forms = filterByClass("form", controls)
					for i=1, #forms, 1 do 
						forms[i].theme = theme
					end

			        local rectangles = filterByClass("rectangle", controls)
					for i=1, #rectangles, 1 do 
						rectangles[i].color = color
						rectangles[i].strokeColor = strokeColor
					end

			        local horzLines = filterByClass("horzLine", controls)
					for i=1, #horzLines, 1 do 
						horzLines[i].strokeColor = strokeColor
					end
						
					local edits = filterByClass("edit", controls)
					for i=1, #edits, 1 do 
						edits[i].fontColor = fontColor
					end

					local labels = filterByClass("label", controls)
					for i=1, #labels, 1 do 
						labels[i].fontColor = fontColor
					end

					local comboBoxs = filterByClass("comboBox", controls)
					for i=1, #comboBoxs, 1 do 
						comboBoxs[i].fontColor = fontColor
					end

					local textEditors = filterByClass("textEditor", controls)
					for i=1, #textEditors, 1 do 
						textEditors[i].fontColor = fontColor
					end

					local checkBoxs = filterByClass("checkBox", controls)
					for i=1, #checkBoxs, 1 do 
						checkBoxs[i].fontColor = fontColor
					end

					local buttons = filterByClass("button", controls)
					for i=1, #buttons, 1 do 
						buttons[i].fontColor = fontColor
					end
				</event>
			</gridRecordList>

			<script>
				self.rclListaDosAtaques:addEventListener("OnEndOrganization", 
					function()
						if sheet == nil then return end
						if self.rclListaDosAtaques.selectedNode ~= nil then return end

			            local nodes = ndb.getChildNodes(sheet.campoDosAtaques)
			            if #nodes > 0 then
			                self.rclListaDosAtaques.selectedNode = nodes[1]
			            end
					end)
			</script>
		</scrollBox>
    </rectangle>
    <rectangle g="col" g-width="10" color="black" strokeColor="white" strokeSize="1" g-min-height="110" padding="{left=5,right=5,top=5,bottom=5}" g-vert-tile="true">
    	<dataScopeBox name="boxDetalhesDoAtaque" visible="false" g="col" g-width="12" g-vert-tile="true" g-cnt-line-spacing="5">
			<script><![CDATA[
				local numeroAtaques = 0
				local ataquesFeitos = 0
				local ataqueID=1
				local weaponID=1
				local dadoAtaques = {}
				local resultadoAtaques = {}
				local rolando = false

				local function proximoCritico(rolado)
					ataquesFeitos = ataquesFeitos + 1

					local personagem = sheet.nome or "personagem"
					local mesa = Firecast.getMesaDe(sheet)
					local weapons = NDB.getChildNodes(self.boxDetalhesDoAtaque.node.campoDeArmas)

					if ataquesFeitos < numeroAtaques then
						ataqueID = ataqueID + 1
						if ataqueID > weapons[weaponID].numAtaques then
							ataqueID = 1
							weaponID = weaponID+1
						end

						local decisivo = weapons[weaponID].decisivo
						local armamento = weapons[weaponID].nomeAtaque or "arma"
						local crit = weapons[weaponID].crit

						if dadoAtaques[ataquesFeitos+1]>=decisivo then
							local rolagem = Firecast.interpretarRolagem(crit)
							mesa.activeChat:rolarDados(rolagem, "Dano adicional do decisivo #" .. ataqueID .. " com " .. armamento .. " de " .. personagem, 
								function (rolado)
									proximoCritico(rolado)
							end)
						else
							proximoCritico(nil)
						end
					else
						rolando = false
					end
					-- Fim do Ataque
				end

				local function proximaConfirmacao(rolado)
					ataquesFeitos = ataquesFeitos + 1

					local personagem = sheet.nome or "personagem"
					local mesa = Firecast.getMesaDe(sheet)
					local weapons = NDB.getChildNodes(self.boxDetalhesDoAtaque.node.campoDeArmas)

					if ataquesFeitos < numeroAtaques then
						ataqueID = ataqueID + 1
						if ataqueID > weapons[weaponID].numAtaques then
							ataqueID = 1
							weaponID = weaponID+1
						end

						local acertos = weapons[weaponID].acertos
						acertos[ataqueID] = acertos[ataqueID] - math.abs(tonumber(sheet.nvNeg) or 0)
						local decisivo = weapons[weaponID].decisivo
						local armamento = weapons[weaponID].nomeAtaque or "arma"
						local conf = tonumber(weapons[weaponID].confirmacaoAtaq) or 0
						if dadoAtaques[ataquesFeitos+1]>=decisivo then
							local confirmacao = Firecast.interpretarRolagem("1d20+" .. (acertos[ataqueID] + conf))
							mesa.activeChat:rolarDados(confirmacao, "Confirmação de Decisivo do ataque #" .. ataqueID .. " com " .. armamento .. " de " .. personagem, 
								function (rolado)
									proximaConfirmacao(rolado)
							end)
						else
							proximaConfirmacao(nil)
						end
					else
						-- Causa o dano adicional

						weaponID = 1
						ataqueID = 1
						ataquesFeitos = 0

						local decisivo = weapons[weaponID].decisivo
						local armamento = weapons[weaponID].nomeAtaque or "arma"
						local crit = weapons[weaponID].crit

						if dadoAtaques[ataquesFeitos+1]>=decisivo then
							local rolagem = Firecast.interpretarRolagem(crit)
							mesa.activeChat:rolarDados(rolagem, "Dano adicional do decisivo #" .. ataqueID .. " com " .. armamento .. " de " .. personagem, 
								function (rolado)
									proximoCritico(rolado)
							end)
						else
							proximoCritico(nil)
						end
					end
				end

				local function proximoDano(rolado)
					ataquesFeitos = ataquesFeitos + 1

					local personagem = sheet.nome or "personagem"
					local mesa = Firecast.getMesaDe(sheet)
					local weapons = NDB.getChildNodes(self.boxDetalhesDoAtaque.node.campoDeArmas)

					if ataquesFeitos < numeroAtaques then
						ataqueID = ataqueID + 1
						if ataqueID > weapons[weaponID].numAtaques then
							ataqueID = 1
							weaponID = weaponID+1
						end

						local dano = weapons[weaponID].dado
						local armamento = weapons[weaponID].nomeAtaque or "arma"

						local rolagem = Firecast.interpretarRolagem(dano)
						mesa.activeChat:rolarDados(rolagem, "Dano #" .. ataqueID .. " com " .. armamento .. " de " .. personagem, 
							function (rolado)
								proximoDano(rolado)
						end)
					else
						-- confirma os criticos

						-- reseta variaveis
						weaponID = 1
						ataqueID = 1
						ataquesFeitos = 0

						local acertos = weapons[weaponID].acertos
						acertos[ataqueID] = acertos[ataqueID] - math.abs(tonumber(sheet.nvNeg) or 0)
						local decisivo = weapons[weaponID].decisivo
						local armamento = weapons[weaponID].nomeAtaque or "arma"
						local conf = tonumber(weapons[weaponID].confirmacaoAtaq) or 0
						if dadoAtaques[ataquesFeitos+1]>=decisivo then
							local confirmacao = Firecast.interpretarRolagem("1d20+" .. (acertos[ataqueID]+conf))
							mesa.activeChat:rolarDados(confirmacao, "Confirmação de Decisivo do ataque #" .. ataqueID .. " com " .. armamento .. " de " .. personagem, 
								function (rolado)
									proximaConfirmacao(rolado)
							end)
						else
							proximaConfirmacao(nil)
						end
					end
				end

				local function proximoAtaque(rolado)
					ataquesFeitos = ataquesFeitos + 1
					dadoAtaques[ataquesFeitos] = rolado.ops[1].resultados[1]
					resultadoAtaques[ataquesFeitos] = rolado.resultado

					local personagem = sheet.nome or "personagem"
					local mesa = Firecast.getMesaDe(sheet)
					local weapons = NDB.getChildNodes(self.boxDetalhesDoAtaque.node.campoDeArmas)

					if ataquesFeitos < numeroAtaques then
						ataqueID = ataqueID + 1
						if ataqueID > weapons[weaponID].numAtaques then
							ataqueID = 1
							weaponID = weaponID+1
						end

						local acertos = weapons[weaponID].acertos
						local armamento = weapons[weaponID].nomeAtaque or "arma"

						acertos[ataqueID] = acertos[ataqueID] - math.abs(tonumber(sheet.nvNeg) or 0)
						local rolagem = Firecast.interpretarRolagem("1d20+" .. acertos[ataqueID])
						mesa.activeChat:rolarDados(rolagem, "Ataque #" .. ataqueID .. " com " .. armamento .. " de " .. personagem, 
							function (rolado)
								proximoAtaque(rolado)
						end)

					else
						-- chama o dano

						-- reseta variaveis
						weaponID = 1
						ataqueID = 1
						ataquesFeitos = 0

						local dano = weapons[weaponID].dado
						local armamento = weapons[weaponID].nomeAtaque or "arma"

						local rolagem = Firecast.interpretarRolagem(dano)
						mesa.activeChat:rolarDados(rolagem, "Dano #" .. ataqueID .. " com " .. armamento .. " de " .. personagem, 
							function (rolado)
								proximoDano(rolado)
						end)
					end
				end

				]]>	
			</script>

    		<Title text="Nome" field="nomeAtaque" widthL="1" widthR="5"/>
			<button text="Nova Arma" g="col" g-width="2" height="25">
				<event name="onClick">
					self.rclListaDeArmas:append()
				</event>
			</button>
			<button text="Ataque Total" g="col" g-width="2" height="25">
				<event name="onClick">
					if sheet==nil then return end
					if rolando then return end

					rolando = true
					
					local weapons = NDB.getChildNodes(self.boxDetalhesDoAtaque.node.campoDeArmas)
					local mesa = Firecast.getMesaDe(sheet)
					local personagem = sheet.nome or "personagem"

					--limpando variaveis do ultimo ataque
					dadoAtaques = {}
					resultadoAtaques = {}
					ataquesFeitos = 0
					multMunicao = 0
					ataqueID=1
					weaponID=1

					numeroAtaques = 0
					for i=1, #weapons, 1 do
	                    weapons[i].atualizar = not (weapons[i].atualizar==true)
						numeroAtaques = numeroAtaques + weapons[i].numAtaques

						if weapons[i].municao~= nil then
							local municao = tonumber(weapons[i].municao) or 0
							local multMunicao = tonumber(weapons[i].multMunicao) or 0
							if numeroAtaques > municao then
								weapons[i].municao = 0
								mesa.activeChat:enviarMensagem("Esta arma possui apenas " .. municao .. " das " .. numeroAtaques .. " munições necessarias para atacar.")
							else
								weapons[i].municao = municao - numeroAtaques - multMunicao
							end
						end
					end

					--preparando ataque
					local acertos = weapons[weaponID].acertos
					local armamento = weapons[weaponID].nomeAtaque or "arma"
					acertos[ataqueID] = acertos[ataqueID] - math.abs(tonumber(sheet.nvNeg) or 0)

					local rolagem = Firecast.interpretarRolagem("1d20+" .. acertos[ataqueID])
					mesa.activeChat:rolarDados(rolagem, "Ataque #" .. ataqueID .. " com " .. armamento .. " de " .. personagem, 
						function (rolado)
							proximoAtaque(rolado)
					end)
				</event>
			</button>
			<button text="Cancelar" g="col" g-width="2" height="25" hint="Libera a trava que evita multiplos ataques ao mesmo tempo manualmente. Sistema anti duplo clique.">
				<event name="onClick">
					rolando =false
				</event>
			</button>

			<scrollBox g="col" g-width="12" g-vert-tile="true">
				<gridRecordList name="rclListaDeArmas" field="campoDeArmas" templateForm="AdvancedAttacksWeapon" g="col" g-width="12" selectable="true" minQt="1"/>
			</scrollBox>

    	</dataScopeBox>
    </rectangle>
</form>